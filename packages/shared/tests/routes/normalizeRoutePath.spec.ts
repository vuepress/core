import { describe, expect, it } from 'vitest'
import { normalizeRoutePath } from '../../src/index.js'

type TestCase = [[path: string, current?: string], expected: string]

const TEST_CASES: TestCase[] = [
  // absolute index
  [['/'], '/'],
  [['/README.md'], '/'],
  [['/readme.md'], '/'],
  [['/index.md'], '/'],
  [['/index.html'], '/'],
  [['/index'], '/'],
  [['/foo/'], '/foo/'],
  [['/foo/README.md'], '/foo/'],
  [['/foo/readme.md'], '/foo/'],
  [['/foo/index.md'], '/foo/'],
  [['/foo/index.html'], '/foo/'],
  [['/foo/index'], '/foo/'],
  [['README.md'], 'index'],
  [['readme.md'], 'index'],
  [['index.md'], 'index'],
  [['index.html'], 'index'],
  [['index'], 'index'],

  // absolute non-index
  [['/foo'], '/foo'],
  [['/foo.md'], '/foo'],
  [['/foo.html'], '/foo'],
  [['/foo/bar'], '/foo/bar'],
  [['/foo/bar.md'], '/foo/bar'],
  [['/foo/bar.html'], '/foo/bar'],

  // relative index without current
  [['foo/'], 'foo/'],
  [['foo/README.md'], 'foo/'],
  [['foo/readme.md'], 'foo/'],
  [['foo/index.md'], 'foo/'],
  [['foo/index.html'], 'foo/'],
  [['foo/index'], 'foo/'],

  // relative non index without current
  [['foo'], 'foo'],
  [['foo.md'], 'foo'],
  [['foo.html'], 'foo'],
  [['foo/bar'], 'foo/bar'],
  [['foo/bar.md'], 'foo/bar'],
  [['foo/bar.html'], 'foo/bar'],

  // relative non index with current
  [['foo', '/'], '/foo'],
  [['foo', '/a.html'], '/foo'],
  [['foo', '/index.html'], '/foo'],
  [['foo', '/a/'], '/a/foo'],
  [['foo', '/a/index.html'], '/a/foo'],
  [['foo', '/a/b.html'], '/a/foo'],
  [['foo.md', '/'], '/foo'],
  [['foo.md', '/a.html'], '/foo'],
  [['foo.md', '/index.html'], '/foo'],
  [['foo.md', '/a/'], '/a/foo'],
  [['foo.md', '/a/index.html'], '/a/foo'],
  [['foo.md', '/a/b.html'], '/a/foo'],
  [['foo.html', '/'], '/foo'],
  [['foo.html', '/a.html'], '/foo'],
  [['foo.html', '/index.html'], '/foo'],
  [['foo.html', '/a/'], '/a/foo'],
  [['foo.html', '/a/index.html'], '/a/foo'],
  [['foo.html', '/a/b.html'], '/a/foo'],
  [['foo/bar', '/'], '/foo/bar'],
  [['foo/bar', '/a.html'], '/foo/bar'],
  [['foo/bar', '/index.html'], '/foo/bar'],
  [['foo/bar', '/a/'], '/a/foo/bar'],
  [['foo/bar', '/a/index.html'], '/a/foo/bar'],
  [['foo/bar', '/a/b.html'], '/a/foo/bar'],
  [['foo/bar.md', '/'], '/foo/bar'],
  [['foo/bar.md', '/a.html'], '/foo/bar'],
  [['foo/bar.md', '/index.html'], '/foo/bar'],
  [['foo/bar.md', '/a/'], '/a/foo/bar'],
  [['foo/bar.md', '/a/index.html'], '/a/foo/bar'],
  [['foo/bar.md', '/a/b.html'], '/a/foo/bar'],
  [['foo/bar.html', '/'], '/foo/bar'],
  [['foo/bar.html', '/a.html'], '/foo/bar'],
  [['foo/bar.html', '/index.html'], '/foo/bar'],
  [['foo/bar.html', '/a/'], '/a/foo/bar'],
  [['foo/bar.html', '/a/index.html'], '/a/foo/bar'],
  [['foo/bar.html', '/a/b.html'], '/a/foo/bar'],
  [['./foo', '/'], '/foo'],
  [['./foo', '/a.html'], '/foo'],
  [['./foo', '/index.html'], '/foo'],
  [['./foo', '/a/'], '/a/foo'],
  [['./foo', '/a/index.html'], '/a/foo'],
  [['./foo', '/a/b.html'], '/a/foo'],
  [['./foo.md', '/'], '/foo'],
  [['./foo.md', '/a.html'], '/foo'],
  [['./foo.md', '/index.html'], '/foo'],
  [['./foo.md', '/a/'], '/a/foo'],
  [['./foo.md', '/a/index.html'], '/a/foo'],
  [['./foo.md', '/a/b.html'], '/a/foo'],
  [['./foo.html', '/'], '/foo'],
  [['./foo.html', '/a.html'], '/foo'],
  [['./foo.html', '/index.html'], '/foo'],
  [['./foo.html', '/a/'], '/a/foo'],
  [['./foo.html', '/a/index.html'], '/a/foo'],
  [['./foo.html', '/a/b.html'], '/a/foo'],
  [['./foo/bar', '/'], '/foo/bar'],
  [['./foo/bar', '/a.html'], '/foo/bar'],
  [['./foo/bar', '/index.html'], '/foo/bar'],
  [['./foo/bar', '/a/'], '/a/foo/bar'],
  [['./foo/bar', '/a/index.html'], '/a/foo/bar'],
  [['./foo/bar', '/a/b.html'], '/a/foo/bar'],
  [['./foo/bar.md', '/'], '/foo/bar'],
  [['./foo/bar.md', '/a.html'], '/foo/bar'],
  [['./foo/bar.md', '/index.html'], '/foo/bar'],
  [['./foo/bar.md', '/a/'], '/a/foo/bar'],
  [['./foo/bar.md', '/a/index.html'], '/a/foo/bar'],
  [['./foo/bar.md', '/a/b.html'], '/a/foo/bar'],
  [['./foo/bar.html', '/'], '/foo/bar'],
  [['./foo/bar.html', '/a.html'], '/foo/bar'],
  [['./foo/bar.html', '/index.html'], '/foo/bar'],
  [['./foo/bar.html', '/a/'], '/a/foo/bar'],
  [['./foo/bar.html', '/a/index.html'], '/a/foo/bar'],
  [['./foo/bar.html', '/a/b.html'], '/a/foo/bar'],
  [['../foo', '/a/'], '/foo'],
  [['../foo', '/a/index.html'], '/foo'],
  [['../foo', '/a/b.html'], '/foo'],
  [['../foo.md', '/a/'], '/foo'],
  [['../foo.md', '/a/index.html'], '/foo'],
  [['../foo.md', '/a/b.html'], '/foo'],
  [['../foo.html', '/a/'], '/foo'],
  [['../foo.html', '/a/index.html'], '/foo'],
  [['../foo.html', '/a/b.html'], '/foo'],
  [['../foo/bar', '/a/'], '/foo/bar'],
  [['../foo/bar', '/a/index.html'], '/foo/bar'],
  [['../foo/bar', '/a/b.html'], '/foo/bar'],
  [['../foo/bar.md', '/a/'], '/foo/bar'],
  [['../foo/bar.md', '/a/index.html'], '/foo/bar'],
  [['../foo/bar.md', '/a/b.html'], '/foo/bar'],
  [['../foo/bar.html', '/a/'], '/foo/bar'],
  [['../foo/bar.html', '/a/index.html'], '/foo/bar'],
  [['../foo/bar.html', '/a/b.html'], '/foo/bar'],

  // absolute non index with current
  [['/foo', '/'], '/foo'],
  [['/foo', '/a.html'], '/foo'],
  [['/foo', '/index.html'], '/foo'],
  [['/foo', '/a/'], '/foo'],
  [['/foo', '/a/index.html'], '/foo'],
  [['/foo', '/a/b.html'], '/foo'],
  [['/foo.md', '/'], '/foo'],
  [['/foo.md', '/a.html'], '/foo'],
  [['/foo.md', '/index.html'], '/foo'],
  [['/foo.md', '/a/'], '/foo'],
  [['/foo.md', '/a/index.html'], '/foo'],
  [['/foo.md', '/a/b.html'], '/foo'],
  [['/foo.html', '/'], '/foo'],
  [['/foo.html', '/a.html'], '/foo'],
  [['/foo.html', '/index.html'], '/foo'],
  [['/foo.html', '/a/'], '/foo'],
  [['/foo.html', '/a/index.html'], '/foo'],
  [['/foo.html', '/a/b.html'], '/foo'],
  [['/foo/bar', '/'], '/foo/bar'],
  [['/foo/bar', '/a.html'], '/foo/bar'],
  [['/foo/bar', '/index.html'], '/foo/bar'],
  [['/foo/bar', '/a/'], '/foo/bar'],
  [['/foo/bar', '/a/index.html'], '/foo/bar'],
  [['/foo/bar', '/a/b.html'], '/foo/bar'],
  [['/foo/bar.md', '/'], '/foo/bar'],
  [['/foo/bar.md', '/a.html'], '/foo/bar'],
  [['/foo/bar.md', '/index.html'], '/foo/bar'],
  [['/foo/bar.md', '/a/'], '/foo/bar'],
  [['/foo/bar.md', '/a/index.html'], '/foo/bar'],
  [['/foo/bar.md', '/a/b.html'], '/foo/bar'],
  [['/foo/bar.html', '/'], '/foo/bar'],
  [['/foo/bar.html', '/a.html'], '/foo/bar'],
  [['/foo/bar.html', '/index.html'], '/foo/bar'],
  [['/foo/bar.html', '/a/'], '/foo/bar'],
  [['/foo/bar.html', '/a/index.html'], '/foo/bar'],
  [['/foo/bar.html', '/a/b.html'], '/foo/bar'],

  // only hash and query
  [[''], ''],

  // unexpected corner cases
  [['.md'], ''],
  [['foo/.md'], 'foo/'],
  [['/.md'], '/'],
  [['/foo/.md'], '/foo/'],
  [['.md', '/a/'], '/a/'],
  [['foo/.md', '/a/'], '/a/foo/'],
  [['/.md', '/a/'], '/'],
  [['/foo/.md', '/a/'], '/foo/'],
  [['.md', '/a/index.html'], '/a/'],
  [['foo/.md', '/a/index.html'], '/a/foo/'],
  [['/.md', '/a/index.html'], '/'],
  [['/foo/.md', '/a/index.html'], '/foo/'],
  [['.md', '/a/b.html'], '/a/'],
  [['foo/.md', '/a/b.html'], '/a/foo/'],
  [['/.md', '/a/b.html'], '/'],
  [['/foo/.md', '/a/b.html'], '/foo/'],
]

describe('should normalize clean paths correctly', () => {
  TEST_CASES.forEach(([[path, current], expected]) => {
    it(`${current ? `"${current}"-` : ''}"${path}" -> "${expected}"`, () => {
      expect(normalizeRoutePath(path, current)).toBe(expected)
    })
  })
})
